{"version":3,"file":"static/js/60.21adb1da.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","components/Filter.js","components/WordEditForm/WordEditForm.styled.js","components/WordEditForm/WordEditForm.js","components/WordItem/WordItem.styled.js","components/WordItem/WordItem.js","components/WordList/WordList.styled.js","components/WordList/WordList.js","components/AddWordForm/AddWordForm.styled.js","components/AddWordForm/AddWordForm.js","pages/Dictionary.js","redux/words/selectors.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectWords } from 'redux/words/selectors';\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredWords = createSelector(\n  [selectWords, selectFilterValue],\n  (words, value) => {\n    return words.filter(word => {\n      return word.engWord.toLowerCase().includes(value.toLowerCase().trim());\n    });\n  }\n);","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { setFilterValue } from 'redux/filter/filterSlice';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const value = e.target.value;\n    dispatch(setFilterValue(value));\n  };\n\n  return (\n    <>\n      <InputGroup style={{ width: '300px', margin: ' 0 auto' }}>\n        <Form.Control\n          aria-label=\"Filter\"\n          onChange={handleChange}\n          value={filterValue}\n          placeholder=\"Search words\"\n        />\n      </InputGroup>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { MdEdit } from 'react-icons/md';\n\nexport const EditIcon = styled(MdEdit)`\n  font-size: 20px;\n  color: black;\n`;\n\nexport const EditBtn = styled.button`\n  align-items: center;\n  border-radius: 4px;\n  display: flex;\n  height: 32px;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  width: 32px;\n  background-color: #fff;\n  border: none;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: rgba(25, 133, 251, 0.08);\n\n    > ${EditIcon} {\n      color: #28c38a;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editWord } from '../../redux/oparations';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { selectWords } from 'redux/words/selectors';\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Modal from 'react-bootstrap/Modal';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { EditIcon, EditBtn } from './WordEditForm.styled';\n\nexport function WordEditForm({ word }) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n  const items = useSelector(selectWords);\n\n  const handleEditWord = event => {\n    event.preventDefault();\n    const engWord = event.currentTarget.engWord.value;\n    const translation = event.currentTarget.translation.value;\n\n    const itemsWithoutWordToEdit = items.filter(item => item !== word);\n\n    const isEngWordExist = itemsWithoutWordToEdit.some(\n      word => word.engWord === engWord\n    );\n    if (isEngWordExist) {\n      Report.failure(`${engWord} is already in the list`);\n      return;\n    }\n\n    if (word.engWord === engWord && word.translation === translation) {\n      Report.warning(\n        'Attention!',\n        `You did no change to word ${word.engWord}!`\n      );\n    }\n\n    dispatch(editWord(word));\n    dispatch(editWord({ ...word, engWord, translation }));\n    event.currentTarget.reset();\n    handleClose();\n  };\n\n  return (\n    <>\n      <EditBtn type=\"button\" onClick={handleShow}>\n        <EditIcon />\n      </EditBtn>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton style={{ border: 'none' }}>\n          <Modal.Title>Edit the word and/or its translation</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleEditWord}>\n          <Form.Group\n            controlId=\"wordToEdit\"\n            style={{\n              padding: '10px',\n              display: 'flex',\n              displayWrap: 'nowrap',\n              gap: '5px',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <InputGroup hasValidation>\n              <FloatingLabel\n                controlId=\"floatingEnglishWordToEdit\"\n                label=\"Edit the English word\"\n              >\n                <Form.Control\n                  type=\"text\"\n                  name=\"engWord\"\n                  defaultValue={word.engWord}\n                  placeholder=\"hello\"\n                  autoFocus\n                  required\n                />\n              </FloatingLabel>\n            </InputGroup>\n            <InputGroup hasValidation>\n              <FloatingLabel\n                label=\"Translation\"\n                controlId=\"floatingTranslationOfWordToEdit\"\n              >\n                <Form.Control\n                  type=\"text\"\n                  name=\"translation\"\n                  defaultValue={word.translation}\n                  required\n                  placeholder=\"hola\"\n                />\n              </FloatingLabel>\n            </InputGroup>\n          </Form.Group>\n          <Modal.Footer style={{ border: 'none' }}>\n            <Button variant=\"secondary\" onClick={handleClose} type=\"button\">\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { MdDelete } from 'react-icons/md';\n\nexport const Item = styled.li`\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  background-color: #fff;\n  border-radius: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 0;\n\n  :not(:last-of-type) {\n    border-bottom: 1px solid #e6e9ee;\n  }\n`;\n\nexport const EngWord = styled.p`\n  color: #2582e7;\n  padding: 0 6px 5px 0;\n  margin: 0;\n  border-radius: 4px;\n  display: inline-block;\n  font-weight: 600;\n  transition: background-color 0.2s ease;\n`;\n\nexport const Translation = styled.p`\n  margin: 0;\n  padding: 0 0 5px 6px;\n`;\n\nexport const Word = styled.div`\n  text-align: start;\n  background-color: #fff;\n  border-radius: 4px;\n  display: inline-flex;\n  padding: 8px;\n  position: relative;\n  width: 440px;\n  cursor: pointer;\n\n  :hover {\n    background-color: rgba(25, 133, 251, 0.08);\n  }\n`;\n\nexport const DeleteIcon = styled(MdDelete)`\n  font-size: 20px;\n  color: black;\n`;\n\nexport const DeleteBtn = styled.button`\n  align-items: center;\n  border-radius: 4px;\n  display: flex;\n  height: 32px;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  width: 32px;\n  background-color: #fff;\n  border: none;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: #fff2f0;\n\n    > ${DeleteIcon} {\n      color: #ed593b;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { FormControlLabel, Checkbox } from '@mui/material';\nimport { deleteWord, checkWord } from 'redux/oparations';\nimport { WordEditForm } from 'components/WordEditForm/WordEditForm';\nimport {\n  Item,\n  Word,\n  EngWord,\n  Translation,\n  DeleteBtn,\n  DeleteIcon,\n} from './WordItem.styled';\n\nexport const WordItem = ({ word, page }) => {\n  const [isChecked, setIsChecked] = useState(word.isChecked);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    Confirm.show(\n      'Confirm removal of word',\n      'Are you sure you want to delete this word from your dictionary?',\n      'Remove',\n      'Cancel',\n      () => {\n        dispatch(deleteWord(id));\n      },\n      () => {\n        return;\n      }\n    );\n  };\n\n  const toggleChecked = () => {\n    if (page === 'dictionary') {\n      Confirm.show(\n        'You know the word?',\n        'Are you sure you want to move the word to your vocabulary?',\n        'Move',\n        'Cancel',\n        () => {\n          dispatch(checkWord({ ...word, isChecked: !isChecked }));\n          setIsChecked(prevState => !prevState);\n        },\n        () => {\n          return;\n        }\n      );\n    } else if (page === 'vocabulary') {\n      Confirm.show(\n        \"You don't know the word?\",\n        'Are you sure you want to move the word to your dictionary?',\n        'Move',\n        'Cancel',\n        () => {\n          dispatch(checkWord({ ...word, isChecked: !isChecked }));\n          setIsChecked(prevState => !prevState);\n        },\n        () => {\n          return;\n        }\n      );\n    } else {\n      return;\n    }\n  };\n\n  /*   const openEditFormModal = () => {};\n   */\n  return (\n    <Item>\n      <FormControlLabel\n        checked={isChecked}\n        control={<Checkbox />}\n        label=\"\"\n        onClick={toggleChecked}\n      />\n      <Word>\n        <EngWord>{word.engWord}</EngWord>—\n        <Translation>{word.translation}</Translation>\n      </Word>\n      <WordEditForm word={word} />\n      <DeleteBtn type=\"button\" onClick={() => handleDelete(word.id)}>\n        <DeleteIcon />\n      </DeleteBtn>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ol`\n  list-style: decimal;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { WordItem } from 'components/WordItem/WordItem';\nimport { List } from './WordList.styled';\n\nexport const WordList = ({ words, page }) => {\n  return (\n    <List>\n      {words.map(word => (\n        <WordItem word={word} key={word.id} page={page} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\n\nexport const StyledButton = styled(Button)`\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n  line-height: 1.43;\n\n  border: 2px solid transparent;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(34, 41, 67, 0.14);\n  box-sizing: border-box;\n  cursor: pointer;\n  font-family: Open Sans, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  height: 40px;\n  padding: 8px 16px;\n  position: relative;\n  text-align: center;\n  text-transform: uppercase;\n  transition: all 0.3s ease-out;\n\n  background-color: #1873d6;\n  border-color: #1873d6;\n  color: #fff;\n\n  :hover,\n  :focus {\n    background-color: #0d5cb9;\n    border-color: #0d5cb9;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addWord } from 'redux/oparations';\nimport { Report } from 'notiflix';\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Modal from 'react-bootstrap/Modal';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { StyledButton } from './AddWordForm.styled';\nimport { selectWords } from 'redux/words/selectors';\n\nexport const AddWordForm = () => {\n  const [show, setShow] = useState(false);\n  const [wordCount, setWordCount] = useState(1);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n  const items = useSelector(selectWords);\n\n  const handleAddWord = event => {\n    event.preventDefault();\n\n    const words = [];\n\n    for (let i = 0; i < wordCount; i += 1) {\n      const engWord = event.currentTarget[`engWord${i}`].value;\n      const translation = event.currentTarget[`translation${i}`].value;\n\n      const alreadyExists = items.some(item => item.engWord === engWord);\n\n      if (alreadyExists) {\n        return Report.warning('The english word already added.', '');\n      }\n\n      if (engWord && translation) {\n        words.push({\n          engWord,\n          translation,\n          isChecked: false,\n        });\n      }\n    }\n\n    if (words.length > 0) {\n      words.forEach(word => dispatch(addWord(word)));\n      handleClose();\n      event.currentTarget.reset();\n      setWordCount(1);\n    }\n  };\n\n  const handleAddMore = () => {\n    setWordCount(wordCount + 1);\n  };\n\n  return (\n    <>\n      <StyledButton variant=\"primary\" type=\"button\" onClick={handleShow}>\n        Create word set\n      </StyledButton>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton style={{ border: 'none' }}>\n          <Modal.Title>Add word and its translation</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleAddWord}>\n          {[...Array(wordCount)].map((_, index) => (\n            <Form.Group\n              key={index}\n              controlId={`word${index}`}\n              style={{\n                padding: '10px',\n                display: 'flex',\n                displayWrap: 'nowrap',\n                gap: '5px',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <InputGroup hasValidation>\n                <FloatingLabel\n                  controlId={`floatingEnglishWord${index}`}\n                  label=\"Word in English\"\n                >\n                  <Form.Control\n                    name={`engWord${index}`}\n                    type=\"text\"\n                    placeholder=\"hello\"\n                    autoFocus={index === 0}\n                    required\n                  />\n                </FloatingLabel>\n              </InputGroup>\n              <InputGroup hasValidation>\n                <FloatingLabel\n                  controlId={`floatingTranslation${index}`}\n                  label=\"Translation\"\n                >\n                  <Form.Control\n                    name={`translation${index}`}\n                    type=\"text\"\n                    placeholder=\"привіт\"\n                    required\n                  />\n                </FloatingLabel>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Modal.Footer style={{ border: 'none' }}>\n            <Button\n              variant=\"primary\"\n              type=\"button\"\n              onClick={handleAddMore}\n              style={{ margin: '0 auto 0' }}\n            >\n              Add more\n            </Button>\n            <Button\n              variant=\"secondary\"\n              onClick={handleClose}\n              type=\"button\"\n              style={{ margin: '5px' }}\n            >\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\" style={{ margin: '5px' }}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWords } from 'redux/oparations';\nimport { selectFilteredUnknownWords } from 'redux/words/selectors';\nimport { WordList } from 'components/WordList/WordList';\nimport { AddWordForm } from 'components/AddWordForm/AddWordForm';\nimport { Filter } from 'components/Filter';\nimport Loader from 'components/Skeleton';\nimport { selectIsLoading } from 'redux/words/selectors';\n\nconst Dictionary = () => {\n  const words = useSelector(selectFilteredUnknownWords);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchWords(controller.signal));\n\n    return () => controller.abort();\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader page=\"/\" />\n      ) : (\n        <>\n          <h2 style={{ margin: '25px auto' }}>My dictionary</h2>\n          <div\n            style={{\n              display: 'flex',\n              gap: '10px',\n              margin: '0 auto',\n              alignItems: 'center',\n              justifyContent: 'center',\n              width: 'fit-content',\n            }}\n          >\n            <AddWordForm />\n            <Filter />\n          </div>\n          <WordList words={words} page=\"dictionary\" />\n          {!words && (\n            <p style={{ padding: '10px', fontSize: '18px' }}>\n              No words added to your dictionary yet.\n            </p>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Dictionary;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectWords = state => state.words.items;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectKnownWords = state =>\n  state.words.items.filter(word => word.isChecked);\n\nexport const selectUnknownWords = state =>\n  state.words.items.filter(word => !word.isChecked);\n\nexport const selectFilteredUnknownWords = createSelector(\n  [selectUnknownWords, selectFilterValue],\n  (words, value) => {\n    return words.filter(word => {\n      return word.engWord.toLowerCase().includes(value.toLowerCase().trim());\n    });\n  }\n);\n\nexport const selectFilteredKnownWords = createSelector(\n  [selectKnownWords, selectFilterValue],\n  (words, value) => {\n    return words.filter(word => {\n      return word.engWord.toLowerCase().includes(value.toLowerCase().trim());\n    });\n  }\n);\n\nexport const selectUnknownEngWords = createSelector(\n  [selectUnknownWords],\n  words => {\n    return words.map(word => word.engWord);\n  }\n);\n\nexport const selectIsLoading = state => state.words.isLoading;\n"],"names":["selectFilterValue","state","filter","createSelector","selectWords","words","value","word","engWord","toLowerCase","includes","trim","Filter","filterValue","useSelector","dispatch","useDispatch","InputGroup","style","width","margin","Form","onChange","e","target","setFilterValue","placeholder","EditIcon","styled","MdEdit","EditBtn","WordEditForm","useState","show","setShow","handleClose","items","type","onClick","Modal","onHide","closeButton","border","onSubmit","event","preventDefault","currentTarget","translation","item","some","Report","editWord","reset","controlId","padding","display","displayWrap","gap","justifyContent","alignItems","hasValidation","FloatingLabel","label","name","defaultValue","autoFocus","required","Button","variant","Item","EngWord","Translation","Word","DeleteIcon","MdDelete","DeleteBtn","WordItem","page","isChecked","setIsChecked","FormControlLabel","checked","control","Checkbox","Confirm","checkWord","prevState","id","deleteWord","List","WordList","map","StyledButton","AddWordForm","wordCount","setWordCount","i","push","length","forEach","addWord","Array","_","index","selectFilteredUnknownWords","isLoading","selectIsLoading","useEffect","controller","AbortController","fetchWords","signal","abort","fontSize","selectKnownWords","selectUnknownWords","selectFilteredKnownWords"],"sourceRoot":""}