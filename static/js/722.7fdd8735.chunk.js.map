{"version":3,"file":"static/js/722.7fdd8735.chunk.js","mappings":"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","sources":["components/Option/Option.styled.js","components/Option/Option.js","components/Button/Button.styled.js","components/Button/Button.js","components/Quiz/Quiz.styled.js","components/Quiz/Quiz.js","pages/Training.js","redux/words/selectors.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const OptionButton = styled.button`\n  padding: 8px 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: #fff;\n  color: #333;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #eee;\n  }\n\n  &:focus {\n    outline: none;\n    /* box-shadow: 0 0 0 2px #ccc; */\n  }\n\n  &.correct {\n    border-color: #0f0;\n    background-color: #cfc;\n    color: #080;\n  }\n\n  &.incorrect {\n    border-color: #f00;\n    background-color: #fcc;\n    color: #800;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { OptionButton } from './Option.styled';\n\nexport const Option = ({\n  option,\n  handleAnswerClick,\n  question,\n  selectedOption,\n  correct,\n}) => {\n  const [answerStatus, setAnswerStatus] = useState(null);\n\n  const isSelected = option === selectedOption;\n  const isCorrect = option === question.correctAnswer;\n\n  useEffect(() => {\n    setAnswerStatus(null);\n  }, [question]);\n\n  const handleClick = () => {\n    setAnswerStatus(isCorrect ? 'correct' : 'incorrect');\n    handleAnswerClick(option, isCorrect);\n  };\n\n  return (\n    <OptionButton\n      type=\"button\"\n      onClick={handleClick}\n      disabled={\n        selectedOption !== null && !isSelected && selectedOption !== option\n      }\n      className={answerStatus}\n    >\n      {option}\n      {/* {isSelected && correct !== null && (isCorrect ? '✅' : '❌')} */}\n    </OptionButton>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  text-decoration: none;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n  line-height: 1.43;\n  border: 2px solid transparent;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(34, 41, 67, 0.14);\n  box-sizing: border-box;\n  cursor: pointer;\n  font-family: Open Sans, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  height: 40px;\n  padding: 8px 16px;\n  position: relative;\n  text-align: center;\n  text-transform: uppercase;\n  transition: all 0.3s ease-out;\n\n  background-color: #1873d6;\n  border-color: #1873d6;\n  color: #fff;\n\n  :hover,\n  :focus {\n    background-color: #0d5cb9;\n    border-color: #0d5cb9;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledButton } from './Button.styled';\n\nconst Button = ({ label, onClick, type, disabled }) => {\n  return (\n    <StyledButton type={type} onClick={onClick} disabled={disabled}>\n      {label}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const OptionList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 15px auto;\n  padding: 5px;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n`;\n\nexport const Result = styled.h2`\n  color: #ffa500;\n  border-radius: 8px;\n  font-size: 24px;\n`;\n\nexport const Score = styled.p`\n  font-size: 48px;\n  text-align: center;\n  color: #ffa500;\n  margin-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  startQuiz,\n  loadQuestions,\n  answerQuestion,\n  finishQuiz,\n  resetQuiz,\n} from '../../redux/quizSlice';\nimport { checkWord } from 'redux/oparations';\nimport { Report } from 'notiflix';\nimport { Option } from 'components/Option/Option';\nimport Button from 'components/Button/Button';\n/* import Loader from 'components/Skeleton'; */\nimport { OptionList, Result, Score } from './Quiz.styled';\n\nexport const Quiz = ({ vocabulary, isLoading }) => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentQuestionData, setCurrentQuestionData] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [correct, setCorrect] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetQuiz());\n      setCurrentQuestion(0);\n      setCurrentQuestionData(null);\n      setSelectedOption(null);\n      setCorrect(null);\n    };\n  }, [dispatch]);\n\n  const { quizStarted, quizComplete, score } = useSelector(state => state.quiz);\n\n  const optionsMap = {};\n  vocabulary.forEach(word => {\n    const options = vocabulary\n      .filter(w => w.id !== word.id)\n      .map(w => w.translation);\n    const correctAnswer = word.translation;\n    const shuffledOptions = shuffle(options).slice(0, 3);\n    const correctAnswerPosition = Math.floor(Math.random() * 3);\n    shuffledOptions.splice(correctAnswerPosition, 0, correctAnswer);\n    optionsMap[word.id] = shuffledOptions;\n  });\n\n  function shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  const quizQuestions = vocabulary\n    .filter(word => word.isChecked)\n    .map(word => {\n      return {\n        id: word.id,\n        question: `What is the translation of the word \"${word.engWord}\"?`,\n        options: optionsMap[word.id],\n        correctAnswer: word.translation,\n        selectedOption: null,\n      };\n    })\n    .slice(0, 10);\n\n  const handleStartQuiz = () => {\n    if (vocabulary.length < 4 && !isLoading) {\n      Report.failure('Oops!', 'Add at least 4 words to start a quiz.');\n      return;\n    }\n    dispatch(resetQuiz());\n    dispatch(startQuiz(quizQuestions));\n    dispatch(loadQuestions(quizQuestions));\n\n    setCurrentQuestionData(quizQuestions[0]);\n  };\n\n  const handleNextQuestionClick = () => {\n    setSelectedOption(null);\n    setCorrect(null);\n\n    if (currentQuestion === quizQuestions.length - 1) {\n      dispatch(finishQuiz());\n      return;\n    }\n    const nextQuestionIndex = currentQuestion + 1;\n    const nextQuestion = quizQuestions[nextQuestionIndex];\n\n    dispatch(loadQuestions(quizQuestions));\n    setCurrentQuestionData(nextQuestion);\n    setCurrentQuestion(nextQuestionIndex);\n  };\n\n  const handleAnswerClick = (option, isCorrect) => {\n    setSelectedOption(option);\n    setCorrect(isCorrect);\n\n    const updatedQuestions = [...quizQuestions];\n    const updatedQuestion = { ...updatedQuestions[currentQuestion] };\n\n    if (currentQuestion < quizQuestions.length) {\n      updatedQuestion.selectedOption = option;\n      updatedQuestion.options = quizQuestions[currentQuestion].options;\n      updatedQuestions[currentQuestion] = updatedQuestion;\n      console.log(updatedQuestion);\n      dispatch(answerQuestion(updatedQuestion));\n    } else {\n      dispatch(finishQuiz());\n    }\n\n    setTimeout(() => {\n      const nextQuestionIndex = currentQuestion + 1;\n      if (nextQuestionIndex === quizQuestions.length) {\n        dispatch(finishQuiz());\n        setCurrentQuestion(null);\n        setCurrentQuestionData(null);\n      } else {\n        setCurrentQuestion(nextQuestionIndex);\n        setCurrentQuestionData(updatedQuestions[nextQuestionIndex]);\n        dispatch(loadQuestions(updatedQuestions));\n      }\n      setSelectedOption(null);\n      setCorrect(null);\n    }, 1000);\n\n    const updatedWord = vocabulary.find(word => word.id === updatedQuestion.id);\n\n    if (isCorrect) {\n      dispatch(checkWord({ ...updatedWord, isChecked: true }));\n    } else if (!isCorrect) {\n      dispatch(checkWord({ ...updatedWord, isChecked: false }));\n    }\n  };\n\n  const handleTryAgain = () => {\n    if (vocabulary.length < 4 && !isLoading) {\n      Report.failure('Oops!', 'Add at least 4 words to start a quiz.');\n      return;\n    }\n\n    setCurrentQuestion(0);\n\n    const resetQuestions = quizQuestions.map(question => ({\n      ...question,\n      selectedOption: null,\n    }));\n\n    dispatch(resetQuiz());\n    dispatch(startQuiz(resetQuestions));\n    dispatch(loadQuestions(resetQuestions));\n\n    setCurrentQuestionData(resetQuestions[0]);\n  };\n\n  return (\n    <>\n      {/*  {isLoading ? (\n        <Loader page=\"/training\" />\n      ) : ( */}\n      <>\n        <div>\n          {!quizStarted && (\n            <Button\n              type=\"button\"\n              onClick={handleStartQuiz}\n              label=\"Start Quiz\"\n              disabled={isLoading}\n            />\n          )}\n\n          {currentQuestionData && quizStarted && !quizComplete && (\n            <>\n              <h2>{currentQuestionData.question}</h2>\n              <OptionList>\n                {currentQuestionData.options.map(option => (\n                  <Option\n                    option={option}\n                    key={option}\n                    handleAnswerClick={handleAnswerClick}\n                    question={currentQuestionData}\n                    selectedOption={selectedOption}\n                    correct={correct}\n                  />\n                ))}\n              </OptionList>\n              <Button\n                type=\"button\"\n                onClick={handleNextQuestionClick}\n                label=\"Next Question\"\n              />\n            </>\n          )}\n          {quizComplete && (\n            <>\n              <Result>Your score:</Result>\n              <Score>\n                {/* Your score is: */} {score} / {quizQuestions.length}\n              </Score>\n              {/* <p>{((score / quizQuestions.length) * 100).toFixed(0)}%</p> */}\n              <Button\n                type=\"button\"\n                onClick={handleTryAgain}\n                label=\"Try Again\"\n              />\n            </>\n          )}\n        </div>\n      </>\n      {/*   )} */}\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchWords } from 'redux/oparations';\nimport { selectKnownWords, selectIsLoading } from '../redux/words/selectors';\nimport { Quiz } from 'components/Quiz/Quiz';\n\nconst Training = () => {\n  const dispatch = useDispatch();\n  const vocabulary = useSelector(selectKnownWords);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchWords(controller.signal));\n\n    return () => controller.abort();\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2 style={{ margin: '25px auto' }}>\n        {/* Choose the mode of training */}Training\n      </h2>\n      <Quiz vocabulary={vocabulary} isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default Training;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectWords = state => state.words.items;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectKnownWords = state =>\n  state.words.items.filter(word => word.isChecked);\n\nexport const selectUnknownWords = state =>\n  state.words.items.filter(word => !word.isChecked);\n\nexport const selectFilteredUnknownWords = createSelector(\n  [selectUnknownWords, selectFilterValue],\n  (words, value) => {\n    return words.filter(word => {\n      return word.engWord.toLowerCase().includes(value.toLowerCase().trim());\n    });\n  }\n);\n\nexport const selectFilteredKnownWords = createSelector(\n  [selectKnownWords, selectFilterValue],\n  (words, value) => {\n    return words.filter(word => {\n      return word.engWord.toLowerCase().includes(value.toLowerCase().trim());\n    });\n  }\n);\n\nexport const selectUnknownEngWords = createSelector(\n  [selectUnknownWords],\n  words => {\n    return words.map(word => word.engWord);\n  }\n);\n\nexport const selectIsLoading = state => state.words.isLoading;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["OptionButton","styled","Option","option","handleAnswerClick","question","selectedOption","correct","useState","answerStatus","setAnswerStatus","isSelected","isCorrect","correctAnswer","useEffect","type","onClick","disabled","className","StyledButton","label","OptionList","Result","Score","Quiz","vocabulary","isLoading","currentQuestion","setCurrentQuestion","currentQuestionData","setCurrentQuestionData","setSelectedOption","setCorrect","dispatch","useDispatch","resetQuiz","useSelector","state","quiz","quizStarted","quizComplete","score","optionsMap","forEach","word","options","filter","w","id","map","translation","shuffledOptions","array","i","length","j","Math","floor","random","shuffle","slice","correctAnswerPosition","splice","quizQuestions","isChecked","engWord","updatedQuestions","updatedQuestion","console","log","answerQuestion","finishQuiz","setTimeout","nextQuestionIndex","loadQuestions","updatedWord","find","checkWord","Report","startQuiz","nextQuestion","resetQuestions","selectKnownWords","selectIsLoading","controller","AbortController","fetchWords","signal","abort","style","margin","selectWords","words","items","selectFilterValue","selectUnknownWords","selectFilteredUnknownWords","createSelector","value","toLowerCase","includes","trim","selectFilteredKnownWords","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}